
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BACKWARD BOOL BOX CELL COLON COMMA DIVIDE DO DONE DROP ELDEF ELUND EMPTY EQ EXIT FALSE FINISH FORWARD FUNCTION GT HASH HEXNUMBER ID IF INF INT LBRACKET LEFT LOAD LOOK LPAREN LT MAIN MINUS MINUS_INF NAN NUMBER PLUS RBRACKET RETURN RIGHT RPAREN TEST TIMES TRUE UNDEF VAR WALL WHILE XORprogram : function_listfunction_list : function_list function\n                     | functionfunction : FUNCTION ID LPAREN ID RPAREN DO statements DONEfunction : MAIN LPAREN ID RPAREN DO statements DONEstatements : statements statement\n                  | statementstatement : VAR ID ASSIGN NUMBERstatement : ID ASSIGN NUMBERstatement : FORWARD NUMBER'
    
_lr_action_items = {'FUNCTION':([0,2,3,6,23,27,],[4,4,-3,-2,-5,-4,]),'MAIN':([0,2,3,6,23,27,],[5,5,-3,-2,-5,-4,]),'$end':([1,2,3,6,23,27,],[0,-1,-3,-2,-5,-4,]),'ID':([4,8,9,14,15,17,18,19,21,24,26,28,30,],[7,10,11,16,16,16,-7,25,16,-6,-10,-9,-8,]),'LPAREN':([5,7,],[8,9,]),'RPAREN':([10,11,],[12,13,]),'DO':([12,13,],[14,15,]),'VAR':([14,15,17,18,21,24,26,28,30,],[19,19,19,-7,19,-6,-10,-9,-8,]),'FORWARD':([14,15,17,18,21,24,26,28,30,],[20,20,20,-7,20,-6,-10,-9,-8,]),'ASSIGN':([16,25,],[22,29,]),'DONE':([17,18,21,24,26,28,30,],[23,-7,27,-6,-10,-9,-8,]),'NUMBER':([20,22,29,],[26,28,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,],[2,]),'function':([0,2,],[3,6,]),'statements':([14,15,],[17,21,]),'statement':([14,15,17,21,],[18,18,24,24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',6),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',10),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',11),
  ('function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE','function',8,'p_function','parser.py',18),
  ('function -> MAIN LPAREN ID RPAREN DO statements DONE','function',7,'p_main_function','parser.py',22),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',25),
  ('statements -> statement','statements',1,'p_statements','parser.py',26),
  ('statement -> VAR ID ASSIGN NUMBER','statement',4,'p_statement_var','parser.py',33),
  ('statement -> ID ASSIGN NUMBER','statement',3,'p_statement_assign','parser.py',37),
  ('statement -> FORWARD NUMBER','statement',2,'p_statement_forward','parser.py',41),
]
