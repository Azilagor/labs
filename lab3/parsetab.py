
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftPLUSMINUSleftTIMESDIVIDErightUMINUSASSIGN BACKWARD BOOL BOX CELL COLON COMMA DIVIDE DO DONE DROP ELDEF ELUND EMPTY EQ EXIT FALSE FINISH FORWARD FUNCTION GT HASH HEXNUMBER ID IF INF INT LBRACKET LEFT LOAD LOOK LPAREN LT MAIN MINUS MINUS_INF NAN NUMBER PLUS RBRACKET RETURN RIGHT RPAREN TEST TIMES TRUE UNDEF VAR WALL WHILE XORprogram : function_listfunction_list : function_list function\n                     | functionfunction : FUNCTION ID LPAREN ID RPAREN DO statements DONEfunction : MAIN LPAREN ID RPAREN DO statements DONEstatements : statements statement\n                  | statementstatement : VAR ID ASSIGN NUMBERstatement : ID LPAREN expression RPARENexpression : INFexpression : NANstatement : FORWARD NUMBERstatement : VAR ID\n                 | VAR ID LPAREN NUMBER RPARENvar_ref : ID\n               | ID LPAREN expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : TRUE\n                  | FALSE\n                  | UNDEFexpression : MINUS expression %prec UMINUSexpression : NUMBERstatement : IF condition DO statements DONE if_else_chainif_else_chain : if_else_chain : ELUND condition DO statements DONE if_else_chainif_else_chain : ELDEF DO statements DONEcondition : expression LT expression\n                 | expression GT expression\n                 | expression EQ expressionstatement : WHILE condition DO statements DONE\n                 | WHILE condition DO statements FINISH statements DONEexpression : ID LPAREN expression RPARENexpression : ID LBRACKET expression RBRACKETexpression : IDstatement : ID ASSIGN expression\n                 | ID LBRACKET expression RBRACKET ASSIGN expressionstatement : RETURN\n                 | RETURN expression'
    
_lr_action_items = {'FUNCTION':([0,2,3,6,28,44,],[4,4,-3,-2,-5,-4,]),'MAIN':([0,2,3,6,28,44,],[5,5,-3,-2,-5,-4,]),'$end':([1,2,3,6,28,44,],[0,-1,-3,-2,-5,-4,]),'ID':([4,8,9,14,15,17,18,19,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,40,41,43,46,50,51,52,53,54,55,56,57,58,59,60,61,62,64,66,70,71,72,73,76,77,78,79,80,81,82,83,84,85,86,88,90,91,92,93,94,95,96,97,],[7,10,11,16,16,16,-7,30,41,41,41,16,41,41,41,-6,-13,-12,-10,-11,41,-21,-22,-23,-25,-37,-41,-38,16,41,41,41,41,41,41,41,-24,41,41,16,-9,-8,16,-17,-18,-19,-20,16,41,-14,-27,-35,-36,-33,16,-39,-26,41,16,16,-34,16,16,16,-29,-27,-28,]),'LPAREN':([5,7,16,30,41,],[8,9,25,49,59,]),'RPAREN':([10,11,34,35,37,38,39,40,41,45,58,65,70,71,72,73,74,80,81,],[12,13,-10,-11,-21,-22,-23,-25,-37,62,-24,78,-17,-18,-19,-20,80,-35,-36,]),'DO':([12,13,32,34,35,37,38,39,40,41,42,58,67,68,69,70,71,72,73,80,81,87,89,],[14,15,50,-10,-11,-21,-22,-23,-25,-37,61,-24,-30,-31,-32,-17,-18,-19,-20,-35,-36,90,92,]),'VAR':([14,15,17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,50,58,61,62,64,66,70,71,72,73,76,78,79,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,],[19,19,19,-7,-40,19,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,19,-24,19,-9,-8,19,-17,-18,-19,-20,19,-14,-27,-35,-36,-33,19,-39,-26,19,19,-34,19,19,19,-29,-27,-28,]),'FORWARD':([14,15,17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,50,58,61,62,64,66,70,71,72,73,76,78,79,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,],[20,20,20,-7,-40,20,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,20,-24,20,-9,-8,20,-17,-18,-19,-20,20,-14,-27,-35,-36,-33,20,-39,-26,20,20,-34,20,20,20,-29,-27,-28,]),'IF':([14,15,17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,50,58,61,62,64,66,70,71,72,73,76,78,79,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,],[21,21,21,-7,-40,21,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,21,-24,21,-9,-8,21,-17,-18,-19,-20,21,-14,-27,-35,-36,-33,21,-39,-26,21,21,-34,21,21,21,-29,-27,-28,]),'WHILE':([14,15,17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,50,58,61,62,64,66,70,71,72,73,76,78,79,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,],[22,22,22,-7,-40,22,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,22,-24,22,-9,-8,22,-17,-18,-19,-20,22,-14,-27,-35,-36,-33,22,-39,-26,22,22,-34,22,22,22,-29,-27,-28,]),'RETURN':([14,15,17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,50,58,61,62,64,66,70,71,72,73,76,78,79,80,81,82,83,84,85,88,90,91,92,93,94,95,96,97,],[23,23,23,-7,-40,23,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,23,-24,23,-9,-8,23,-17,-18,-19,-20,23,-14,-27,-35,-36,-33,23,-39,-26,23,23,-34,23,23,23,-29,-27,-28,]),'ASSIGN':([16,30,63,],[26,48,77,]),'LBRACKET':([16,41,],[27,60,]),'DONE':([17,18,23,24,29,30,31,34,35,37,38,39,40,41,43,46,58,62,64,66,70,71,72,73,76,78,79,80,81,82,84,85,88,91,93,94,95,96,97,],[28,-7,-40,44,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,-24,-9,-8,79,-17,-18,-19,-20,82,-14,-27,-35,-36,-33,-39,-26,91,-34,95,96,-29,-27,-28,]),'FINISH':([18,23,29,30,31,34,35,37,38,39,40,41,43,46,58,62,64,70,71,72,73,76,78,79,80,81,82,84,85,91,95,96,97,],[-7,-40,-6,-13,-12,-10,-11,-21,-22,-23,-25,-37,-41,-38,-24,-9,-8,-17,-18,-19,-20,83,-14,-27,-35,-36,-33,-39,-26,-34,-29,-27,-28,]),'NUMBER':([20,21,22,23,25,26,27,36,48,49,51,52,53,54,55,56,57,59,60,77,86,],[31,40,40,40,40,40,40,40,64,65,40,40,40,40,40,40,40,40,40,40,40,]),'INF':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'NAN':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'TRUE':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'FALSE':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'UNDEF':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'MINUS':([21,22,23,25,26,27,33,34,35,36,37,38,39,40,41,43,45,46,47,51,52,53,54,55,56,57,58,59,60,67,68,69,70,71,72,73,74,75,77,80,81,84,86,],[36,36,36,36,36,36,55,-10,-11,36,-21,-22,-23,-25,-37,55,55,55,55,36,36,36,36,36,36,36,-24,36,36,55,55,55,-17,-18,-19,-20,55,55,36,-35,-36,55,36,]),'LT':([33,34,35,37,38,39,40,41,58,70,71,72,73,80,81,],[51,-10,-11,-21,-22,-23,-25,-37,-24,-17,-18,-19,-20,-35,-36,]),'GT':([33,34,35,37,38,39,40,41,58,70,71,72,73,80,81,],[52,-10,-11,-21,-22,-23,-25,-37,-24,-17,-18,-19,-20,-35,-36,]),'EQ':([33,34,35,37,38,39,40,41,58,70,71,72,73,80,81,],[53,-10,-11,-21,-22,-23,-25,-37,-24,-17,-18,-19,-20,-35,-36,]),'PLUS':([33,34,35,37,38,39,40,41,43,45,46,47,58,67,68,69,70,71,72,73,74,75,80,81,84,],[54,-10,-11,-21,-22,-23,-25,-37,54,54,54,54,-24,54,54,54,-17,-18,-19,-20,54,54,-35,-36,54,]),'TIMES':([33,34,35,37,38,39,40,41,43,45,46,47,58,67,68,69,70,71,72,73,74,75,80,81,84,],[56,-10,-11,-21,-22,-23,-25,-37,56,56,56,56,-24,56,56,56,56,56,-19,-20,56,56,-35,-36,56,]),'DIVIDE':([33,34,35,37,38,39,40,41,43,45,46,47,58,67,68,69,70,71,72,73,74,75,80,81,84,],[57,-10,-11,-21,-22,-23,-25,-37,57,57,57,57,-24,57,57,57,57,57,-19,-20,57,57,-35,-36,57,]),'RBRACKET':([34,35,37,38,39,40,41,47,58,70,71,72,73,75,80,81,],[-10,-11,-21,-22,-23,-25,-37,63,-24,-17,-18,-19,-20,81,-35,-36,]),'ELUND':([79,96,],[86,86,]),'ELDEF':([79,96,],[87,87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,],[2,]),'function':([0,2,],[3,6,]),'statements':([14,15,50,61,83,90,92,],[17,24,66,76,88,93,94,]),'statement':([14,15,17,24,50,61,66,76,83,88,90,92,93,94,],[18,18,29,29,18,18,29,29,18,29,18,18,29,29,]),'condition':([21,22,86,],[32,42,89,]),'expression':([21,22,23,25,26,27,36,51,52,53,54,55,56,57,59,60,77,86,],[33,33,43,45,46,47,58,67,68,69,70,71,72,73,74,75,84,33,]),'if_else_chain':([79,96,],[85,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','parser.py',13),
  ('function_list -> function_list function','function_list',2,'p_function_list','parser.py',17),
  ('function_list -> function','function_list',1,'p_function_list','parser.py',18),
  ('function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE','function',8,'p_function','parser.py',25),
  ('function -> MAIN LPAREN ID RPAREN DO statements DONE','function',7,'p_main_function','parser.py',29),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',33),
  ('statements -> statement','statements',1,'p_statements','parser.py',34),
  ('statement -> VAR ID ASSIGN NUMBER','statement',4,'p_statement_var','parser.py',46),
  ('statement -> ID LPAREN expression RPAREN','statement',4,'p_statement_call','parser.py',50),
  ('expression -> INF','expression',1,'p_expression_inf','parser.py',54),
  ('expression -> NAN','expression',1,'p_expression_nan','parser.py',58),
  ('statement -> FORWARD NUMBER','statement',2,'p_statement_forward','parser.py',62),
  ('statement -> VAR ID','statement',2,'p_statement_var_decl','parser.py',66),
  ('statement -> VAR ID LPAREN NUMBER RPAREN','statement',5,'p_statement_var_decl','parser.py',67),
  ('var_ref -> ID','var_ref',1,'p_var_ref','parser.py',76),
  ('var_ref -> ID LPAREN expression RPAREN','var_ref',4,'p_var_ref','parser.py',77),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',85),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',86),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',87),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',88),
  ('expression -> TRUE','expression',1,'p_expression_bool','parser.py',100),
  ('expression -> FALSE','expression',1,'p_expression_bool','parser.py',101),
  ('expression -> UNDEF','expression',1,'p_expression_bool','parser.py',102),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','parser.py',111),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',116),
  ('statement -> IF condition DO statements DONE if_else_chain','statement',6,'p_statement_if','parser.py',122),
  ('if_else_chain -> <empty>','if_else_chain',0,'p_if_else_chain_empty','parser.py',126),
  ('if_else_chain -> ELUND condition DO statements DONE if_else_chain','if_else_chain',6,'p_if_else_chain_elif','parser.py',130),
  ('if_else_chain -> ELDEF DO statements DONE','if_else_chain',4,'p_if_else_chain_else','parser.py',134),
  ('condition -> expression LT expression','condition',3,'p_condition','parser.py',139),
  ('condition -> expression GT expression','condition',3,'p_condition','parser.py',140),
  ('condition -> expression EQ expression','condition',3,'p_condition','parser.py',141),
  ('statement -> WHILE condition DO statements DONE','statement',5,'p_statement_while','parser.py',151),
  ('statement -> WHILE condition DO statements FINISH statements DONE','statement',7,'p_statement_while','parser.py',152),
  ('expression -> ID LPAREN expression RPAREN','expression',4,'p_expression_call','parser.py',160),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_expression_array_index','parser.py',165),
  ('expression -> ID','expression',1,'p_expression_var','parser.py',170),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','parser.py',176),
  ('statement -> ID LBRACKET expression RBRACKET ASSIGN expression','statement',6,'p_statement_assign','parser.py',177),
  ('statement -> RETURN','statement',1,'p_statement_return','parser.py',185),
  ('statement -> RETURN expression','statement',2,'p_statement_return','parser.py',186),
]
