Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BACKWARD
    BOOL
    BOX
    CELL
    COLON
    COMMA
    DROP
    EMPTY
    EXIT
    FALSE
    HASH
    HEXNUMBER
    INT
    LEFT
    LOAD
    LOOK
    MINUS_INF
    RIGHT
    TEST
    TRUE
    UNDEF
    WALL
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> function_list
Rule 2     function_list -> function_list function
Rule 3     function_list -> function
Rule 4     function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE
Rule 5     function -> MAIN LPAREN ID RPAREN DO statements DONE
Rule 6     statements -> statements statement
Rule 7     statements -> statement
Rule 8     statement -> VAR ID ASSIGN NUMBER
Rule 9     statement -> ID LPAREN expression RPAREN
Rule 10    expression -> INF
Rule 11    expression -> NAN
Rule 12    statement -> FORWARD NUMBER
Rule 13    statement -> VAR ID
Rule 14    statement -> VAR ID LPAREN NUMBER RPAREN
Rule 15    var_ref -> ID
Rule 16    var_ref -> ID LPAREN expression RPAREN
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> NUMBER
Rule 23    statement -> IF condition DO statements DONE if_else_chain
Rule 24    if_else_chain -> <empty>
Rule 25    if_else_chain -> ELUND condition DO statements DONE if_else_chain
Rule 26    if_else_chain -> ELDEF DO statements DONE
Rule 27    condition -> expression LT expression
Rule 28    condition -> expression GT expression
Rule 29    condition -> expression EQ expression
Rule 30    statement -> WHILE condition DO statements DONE
Rule 31    statement -> WHILE condition DO statements FINISH statements DONE
Rule 32    expression -> ID LPAREN expression RPAREN
Rule 33    expression -> ID LBRACKET expression RBRACKET
Rule 34    expression -> ID
Rule 35    statement -> ID ASSIGN expression
Rule 36    statement -> ID LBRACKET expression RBRACKET ASSIGN expression
Rule 37    statement -> RETURN
Rule 38    statement -> RETURN expression

Terminals, with rules where they appear

ASSIGN               : 8 35 36
BACKWARD             : 
BOOL                 : 
BOX                  : 
CELL                 : 
COLON                : 
COMMA                : 
DIVIDE               : 20
DO                   : 4 5 23 25 26 30 31
DONE                 : 4 5 23 25 26 30 31
DROP                 : 
ELDEF                : 26
ELUND                : 25
EMPTY                : 
EQ                   : 29
EXIT                 : 
FALSE                : 
FINISH               : 31
FORWARD              : 12
FUNCTION             : 4
GT                   : 28
HASH                 : 
HEXNUMBER            : 
ID                   : 4 4 5 8 9 13 14 15 16 32 33 34 35 36
IF                   : 23
INF                  : 10
INT                  : 
LBRACKET             : 33 36
LEFT                 : 
LOAD                 : 
LOOK                 : 
LPAREN               : 4 5 9 14 16 32
LT                   : 27
MAIN                 : 5
MINUS                : 18 21
MINUS_INF            : 
NAN                  : 11
NUMBER               : 8 12 14 22
PLUS                 : 17
RBRACKET             : 33 36
RETURN               : 37 38
RIGHT                : 
RPAREN               : 4 5 9 14 16 32
TEST                 : 
TIMES                : 19
TRUE                 : 
UNDEF                : 
VAR                  : 8 13 14
WALL                 : 
WHILE                : 30 31
XOR                  : 
error                : 

Nonterminals, with rules where they appear

condition            : 23 25 30 31
expression           : 9 16 17 17 18 18 19 19 20 20 21 27 27 28 28 29 29 32 33 35 36 36 38
function             : 2 3
function_list        : 1 2
if_else_chain        : 23 25
program              : 0
statement            : 6 7
statements           : 4 5 6 23 25 26 30 31 31
var_ref              : 

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_list
    (2) function_list -> . function_list function
    (3) function_list -> . function
    (4) function -> . FUNCTION ID LPAREN ID RPAREN DO statements DONE
    (5) function -> . MAIN LPAREN ID RPAREN DO statements DONE

    FUNCTION        shift and go to state 4
    MAIN            shift and go to state 5

    program                        shift and go to state 1
    function_list                  shift and go to state 2
    function                       shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function_list .
    (2) function_list -> function_list . function
    (4) function -> . FUNCTION ID LPAREN ID RPAREN DO statements DONE
    (5) function -> . MAIN LPAREN ID RPAREN DO statements DONE

    $end            reduce using rule 1 (program -> function_list .)
    FUNCTION        shift and go to state 4
    MAIN            shift and go to state 5

    function                       shift and go to state 6

state 3

    (3) function_list -> function .

    FUNCTION        reduce using rule 3 (function_list -> function .)
    MAIN            reduce using rule 3 (function_list -> function .)
    $end            reduce using rule 3 (function_list -> function .)


state 4

    (4) function -> FUNCTION . ID LPAREN ID RPAREN DO statements DONE

    ID              shift and go to state 7


state 5

    (5) function -> MAIN . LPAREN ID RPAREN DO statements DONE

    LPAREN          shift and go to state 8


state 6

    (2) function_list -> function_list function .

    FUNCTION        reduce using rule 2 (function_list -> function_list function .)
    MAIN            reduce using rule 2 (function_list -> function_list function .)
    $end            reduce using rule 2 (function_list -> function_list function .)


state 7

    (4) function -> FUNCTION ID . LPAREN ID RPAREN DO statements DONE

    LPAREN          shift and go to state 9


state 8

    (5) function -> MAIN LPAREN . ID RPAREN DO statements DONE

    ID              shift and go to state 10


state 9

    (4) function -> FUNCTION ID LPAREN . ID RPAREN DO statements DONE

    ID              shift and go to state 11


state 10

    (5) function -> MAIN LPAREN ID . RPAREN DO statements DONE

    RPAREN          shift and go to state 12


state 11

    (4) function -> FUNCTION ID LPAREN ID . RPAREN DO statements DONE

    RPAREN          shift and go to state 13


state 12

    (5) function -> MAIN LPAREN ID RPAREN . DO statements DONE

    DO              shift and go to state 14


state 13

    (4) function -> FUNCTION ID LPAREN ID RPAREN . DO statements DONE

    DO              shift and go to state 15


state 14

    (5) function -> MAIN LPAREN ID RPAREN DO . statements DONE
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 17
    statement                      shift and go to state 18

state 15

    (4) function -> FUNCTION ID LPAREN ID RPAREN DO . statements DONE
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 24
    statement                      shift and go to state 18

state 16

    (9) statement -> ID . LPAREN expression RPAREN
    (35) statement -> ID . ASSIGN expression
    (36) statement -> ID . LBRACKET expression RBRACKET ASSIGN expression

    LPAREN          shift and go to state 25
    ASSIGN          shift and go to state 26
    LBRACKET        shift and go to state 27


state 17

    (5) function -> MAIN LPAREN ID RPAREN DO statements . DONE
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 28
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 18

    (7) statements -> statement .

    DONE            reduce using rule 7 (statements -> statement .)
    VAR             reduce using rule 7 (statements -> statement .)
    ID              reduce using rule 7 (statements -> statement .)
    FORWARD         reduce using rule 7 (statements -> statement .)
    IF              reduce using rule 7 (statements -> statement .)
    WHILE           reduce using rule 7 (statements -> statement .)
    RETURN          reduce using rule 7 (statements -> statement .)
    FINISH          reduce using rule 7 (statements -> statement .)


state 19

    (8) statement -> VAR . ID ASSIGN NUMBER
    (13) statement -> VAR . ID
    (14) statement -> VAR . ID LPAREN NUMBER RPAREN

    ID              shift and go to state 30


state 20

    (12) statement -> FORWARD . NUMBER

    NUMBER          shift and go to state 31


state 21

    (23) statement -> IF . condition DO statements DONE if_else_chain
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression EQ expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    condition                      shift and go to state 32
    expression                     shift and go to state 33

state 22

    (30) statement -> WHILE . condition DO statements DONE
    (31) statement -> WHILE . condition DO statements FINISH statements DONE
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression EQ expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    condition                      shift and go to state 39
    expression                     shift and go to state 33

state 23

    (37) statement -> RETURN .
    (38) statement -> RETURN . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

  ! shift/reduce conflict for ID resolved as shift
    DONE            reduce using rule 37 (statement -> RETURN .)
    VAR             reduce using rule 37 (statement -> RETURN .)
    FORWARD         reduce using rule 37 (statement -> RETURN .)
    IF              reduce using rule 37 (statement -> RETURN .)
    WHILE           reduce using rule 37 (statement -> RETURN .)
    RETURN          reduce using rule 37 (statement -> RETURN .)
    FINISH          reduce using rule 37 (statement -> RETURN .)
    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

  ! ID              [ reduce using rule 37 (statement -> RETURN .) ]

    expression                     shift and go to state 40

state 24

    (4) function -> FUNCTION ID LPAREN ID RPAREN DO statements . DONE
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 41
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 25

    (9) statement -> ID LPAREN . expression RPAREN
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 42

state 26

    (35) statement -> ID ASSIGN . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 43

state 27

    (36) statement -> ID LBRACKET . expression RBRACKET ASSIGN expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 44

state 28

    (5) function -> MAIN LPAREN ID RPAREN DO statements DONE .

    FUNCTION        reduce using rule 5 (function -> MAIN LPAREN ID RPAREN DO statements DONE .)
    MAIN            reduce using rule 5 (function -> MAIN LPAREN ID RPAREN DO statements DONE .)
    $end            reduce using rule 5 (function -> MAIN LPAREN ID RPAREN DO statements DONE .)


state 29

    (6) statements -> statements statement .

    DONE            reduce using rule 6 (statements -> statements statement .)
    VAR             reduce using rule 6 (statements -> statements statement .)
    ID              reduce using rule 6 (statements -> statements statement .)
    FORWARD         reduce using rule 6 (statements -> statements statement .)
    IF              reduce using rule 6 (statements -> statements statement .)
    WHILE           reduce using rule 6 (statements -> statements statement .)
    RETURN          reduce using rule 6 (statements -> statements statement .)
    FINISH          reduce using rule 6 (statements -> statements statement .)


state 30

    (8) statement -> VAR ID . ASSIGN NUMBER
    (13) statement -> VAR ID .
    (14) statement -> VAR ID . LPAREN NUMBER RPAREN

    ASSIGN          shift and go to state 45
    DONE            reduce using rule 13 (statement -> VAR ID .)
    VAR             reduce using rule 13 (statement -> VAR ID .)
    ID              reduce using rule 13 (statement -> VAR ID .)
    FORWARD         reduce using rule 13 (statement -> VAR ID .)
    IF              reduce using rule 13 (statement -> VAR ID .)
    WHILE           reduce using rule 13 (statement -> VAR ID .)
    RETURN          reduce using rule 13 (statement -> VAR ID .)
    FINISH          reduce using rule 13 (statement -> VAR ID .)
    LPAREN          shift and go to state 46


state 31

    (12) statement -> FORWARD NUMBER .

    DONE            reduce using rule 12 (statement -> FORWARD NUMBER .)
    VAR             reduce using rule 12 (statement -> FORWARD NUMBER .)
    ID              reduce using rule 12 (statement -> FORWARD NUMBER .)
    FORWARD         reduce using rule 12 (statement -> FORWARD NUMBER .)
    IF              reduce using rule 12 (statement -> FORWARD NUMBER .)
    WHILE           reduce using rule 12 (statement -> FORWARD NUMBER .)
    RETURN          reduce using rule 12 (statement -> FORWARD NUMBER .)
    FINISH          reduce using rule 12 (statement -> FORWARD NUMBER .)


state 32

    (23) statement -> IF condition . DO statements DONE if_else_chain

    DO              shift and go to state 47


state 33

    (27) condition -> expression . LT expression
    (28) condition -> expression . GT expression
    (29) condition -> expression . EQ expression
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              shift and go to state 48
    GT              shift and go to state 49
    EQ              shift and go to state 50
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 34

    (10) expression -> INF .

    LT              reduce using rule 10 (expression -> INF .)
    GT              reduce using rule 10 (expression -> INF .)
    EQ              reduce using rule 10 (expression -> INF .)
    PLUS            reduce using rule 10 (expression -> INF .)
    MINUS           reduce using rule 10 (expression -> INF .)
    TIMES           reduce using rule 10 (expression -> INF .)
    DIVIDE          reduce using rule 10 (expression -> INF .)
    DONE            reduce using rule 10 (expression -> INF .)
    VAR             reduce using rule 10 (expression -> INF .)
    ID              reduce using rule 10 (expression -> INF .)
    FORWARD         reduce using rule 10 (expression -> INF .)
    IF              reduce using rule 10 (expression -> INF .)
    WHILE           reduce using rule 10 (expression -> INF .)
    RETURN          reduce using rule 10 (expression -> INF .)
    FINISH          reduce using rule 10 (expression -> INF .)
    RPAREN          reduce using rule 10 (expression -> INF .)
    RBRACKET        reduce using rule 10 (expression -> INF .)
    DO              reduce using rule 10 (expression -> INF .)


state 35

    (11) expression -> NAN .

    LT              reduce using rule 11 (expression -> NAN .)
    GT              reduce using rule 11 (expression -> NAN .)
    EQ              reduce using rule 11 (expression -> NAN .)
    PLUS            reduce using rule 11 (expression -> NAN .)
    MINUS           reduce using rule 11 (expression -> NAN .)
    TIMES           reduce using rule 11 (expression -> NAN .)
    DIVIDE          reduce using rule 11 (expression -> NAN .)
    DONE            reduce using rule 11 (expression -> NAN .)
    VAR             reduce using rule 11 (expression -> NAN .)
    ID              reduce using rule 11 (expression -> NAN .)
    FORWARD         reduce using rule 11 (expression -> NAN .)
    IF              reduce using rule 11 (expression -> NAN .)
    WHILE           reduce using rule 11 (expression -> NAN .)
    RETURN          reduce using rule 11 (expression -> NAN .)
    FINISH          reduce using rule 11 (expression -> NAN .)
    RPAREN          reduce using rule 11 (expression -> NAN .)
    RBRACKET        reduce using rule 11 (expression -> NAN .)
    DO              reduce using rule 11 (expression -> NAN .)


state 36

    (21) expression -> MINUS . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 55

state 37

    (22) expression -> NUMBER .

    LT              reduce using rule 22 (expression -> NUMBER .)
    GT              reduce using rule 22 (expression -> NUMBER .)
    EQ              reduce using rule 22 (expression -> NUMBER .)
    PLUS            reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    TIMES           reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    DONE            reduce using rule 22 (expression -> NUMBER .)
    VAR             reduce using rule 22 (expression -> NUMBER .)
    ID              reduce using rule 22 (expression -> NUMBER .)
    FORWARD         reduce using rule 22 (expression -> NUMBER .)
    IF              reduce using rule 22 (expression -> NUMBER .)
    WHILE           reduce using rule 22 (expression -> NUMBER .)
    RETURN          reduce using rule 22 (expression -> NUMBER .)
    FINISH          reduce using rule 22 (expression -> NUMBER .)
    RPAREN          reduce using rule 22 (expression -> NUMBER .)
    RBRACKET        reduce using rule 22 (expression -> NUMBER .)
    DO              reduce using rule 22 (expression -> NUMBER .)


state 38

    (32) expression -> ID . LPAREN expression RPAREN
    (33) expression -> ID . LBRACKET expression RBRACKET
    (34) expression -> ID .

    LPAREN          shift and go to state 56
    LBRACKET        shift and go to state 57
    LT              reduce using rule 34 (expression -> ID .)
    GT              reduce using rule 34 (expression -> ID .)
    EQ              reduce using rule 34 (expression -> ID .)
    PLUS            reduce using rule 34 (expression -> ID .)
    MINUS           reduce using rule 34 (expression -> ID .)
    TIMES           reduce using rule 34 (expression -> ID .)
    DIVIDE          reduce using rule 34 (expression -> ID .)
    DONE            reduce using rule 34 (expression -> ID .)
    VAR             reduce using rule 34 (expression -> ID .)
    ID              reduce using rule 34 (expression -> ID .)
    FORWARD         reduce using rule 34 (expression -> ID .)
    IF              reduce using rule 34 (expression -> ID .)
    WHILE           reduce using rule 34 (expression -> ID .)
    RETURN          reduce using rule 34 (expression -> ID .)
    FINISH          reduce using rule 34 (expression -> ID .)
    RPAREN          reduce using rule 34 (expression -> ID .)
    RBRACKET        reduce using rule 34 (expression -> ID .)
    DO              reduce using rule 34 (expression -> ID .)


state 39

    (30) statement -> WHILE condition . DO statements DONE
    (31) statement -> WHILE condition . DO statements FINISH statements DONE

    DO              shift and go to state 58


state 40

    (38) statement -> RETURN expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DONE            reduce using rule 38 (statement -> RETURN expression .)
    VAR             reduce using rule 38 (statement -> RETURN expression .)
    ID              reduce using rule 38 (statement -> RETURN expression .)
    FORWARD         reduce using rule 38 (statement -> RETURN expression .)
    IF              reduce using rule 38 (statement -> RETURN expression .)
    WHILE           reduce using rule 38 (statement -> RETURN expression .)
    RETURN          reduce using rule 38 (statement -> RETURN expression .)
    FINISH          reduce using rule 38 (statement -> RETURN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 41

    (4) function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE .

    FUNCTION        reduce using rule 4 (function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE .)
    MAIN            reduce using rule 4 (function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE .)
    $end            reduce using rule 4 (function -> FUNCTION ID LPAREN ID RPAREN DO statements DONE .)


state 42

    (9) statement -> ID LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 59
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 43

    (35) statement -> ID ASSIGN expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DONE            reduce using rule 35 (statement -> ID ASSIGN expression .)
    VAR             reduce using rule 35 (statement -> ID ASSIGN expression .)
    ID              reduce using rule 35 (statement -> ID ASSIGN expression .)
    FORWARD         reduce using rule 35 (statement -> ID ASSIGN expression .)
    IF              reduce using rule 35 (statement -> ID ASSIGN expression .)
    WHILE           reduce using rule 35 (statement -> ID ASSIGN expression .)
    RETURN          reduce using rule 35 (statement -> ID ASSIGN expression .)
    FINISH          reduce using rule 35 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 44

    (36) statement -> ID LBRACKET expression . RBRACKET ASSIGN expression
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 60
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 45

    (8) statement -> VAR ID ASSIGN . NUMBER

    NUMBER          shift and go to state 61


state 46

    (14) statement -> VAR ID LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 62


state 47

    (23) statement -> IF condition DO . statements DONE if_else_chain
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 63
    statement                      shift and go to state 18

state 48

    (27) condition -> expression LT . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 64

state 49

    (28) condition -> expression GT . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 65

state 50

    (29) condition -> expression EQ . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 66

state 51

    (17) expression -> expression PLUS . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 67

state 52

    (18) expression -> expression MINUS . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 68

state 53

    (19) expression -> expression TIMES . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 69

state 54

    (20) expression -> expression DIVIDE . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 70

state 55

    (21) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              reduce using rule 21 (expression -> MINUS expression .)
    GT              reduce using rule 21 (expression -> MINUS expression .)
    EQ              reduce using rule 21 (expression -> MINUS expression .)
    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    TIMES           reduce using rule 21 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 21 (expression -> MINUS expression .)
    DONE            reduce using rule 21 (expression -> MINUS expression .)
    VAR             reduce using rule 21 (expression -> MINUS expression .)
    ID              reduce using rule 21 (expression -> MINUS expression .)
    FORWARD         reduce using rule 21 (expression -> MINUS expression .)
    IF              reduce using rule 21 (expression -> MINUS expression .)
    WHILE           reduce using rule 21 (expression -> MINUS expression .)
    RETURN          reduce using rule 21 (expression -> MINUS expression .)
    FINISH          reduce using rule 21 (expression -> MINUS expression .)
    RPAREN          reduce using rule 21 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 21 (expression -> MINUS expression .)
    DO              reduce using rule 21 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 56

    (32) expression -> ID LPAREN . expression RPAREN
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 71

state 57

    (33) expression -> ID LBRACKET . expression RBRACKET
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 72

state 58

    (30) statement -> WHILE condition DO . statements DONE
    (31) statement -> WHILE condition DO . statements FINISH statements DONE
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 73
    statement                      shift and go to state 18

state 59

    (9) statement -> ID LPAREN expression RPAREN .

    DONE            reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    VAR             reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    ID              reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    FORWARD         reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    IF              reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    WHILE           reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    RETURN          reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)
    FINISH          reduce using rule 9 (statement -> ID LPAREN expression RPAREN .)


state 60

    (36) statement -> ID LBRACKET expression RBRACKET . ASSIGN expression

    ASSIGN          shift and go to state 74


state 61

    (8) statement -> VAR ID ASSIGN NUMBER .

    DONE            reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    VAR             reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    ID              reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    FORWARD         reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    IF              reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    WHILE           reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    RETURN          reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)
    FINISH          reduce using rule 8 (statement -> VAR ID ASSIGN NUMBER .)


state 62

    (14) statement -> VAR ID LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 75


state 63

    (23) statement -> IF condition DO statements . DONE if_else_chain
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 76
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 64

    (27) condition -> expression LT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DO              reduce using rule 27 (condition -> expression LT expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 65

    (28) condition -> expression GT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DO              reduce using rule 28 (condition -> expression GT expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 66

    (29) condition -> expression EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DO              reduce using rule 29 (condition -> expression EQ expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 67

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              reduce using rule 17 (expression -> expression PLUS expression .)
    GT              reduce using rule 17 (expression -> expression PLUS expression .)
    EQ              reduce using rule 17 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    DONE            reduce using rule 17 (expression -> expression PLUS expression .)
    VAR             reduce using rule 17 (expression -> expression PLUS expression .)
    ID              reduce using rule 17 (expression -> expression PLUS expression .)
    FORWARD         reduce using rule 17 (expression -> expression PLUS expression .)
    IF              reduce using rule 17 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 17 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 17 (expression -> expression PLUS expression .)
    FINISH          reduce using rule 17 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 17 (expression -> expression PLUS expression .)
    DO              reduce using rule 17 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 68

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              reduce using rule 18 (expression -> expression MINUS expression .)
    GT              reduce using rule 18 (expression -> expression MINUS expression .)
    EQ              reduce using rule 18 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    DONE            reduce using rule 18 (expression -> expression MINUS expression .)
    VAR             reduce using rule 18 (expression -> expression MINUS expression .)
    ID              reduce using rule 18 (expression -> expression MINUS expression .)
    FORWARD         reduce using rule 18 (expression -> expression MINUS expression .)
    IF              reduce using rule 18 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 18 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 18 (expression -> expression MINUS expression .)
    FINISH          reduce using rule 18 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 18 (expression -> expression MINUS expression .)
    DO              reduce using rule 18 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54

  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 69

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              reduce using rule 19 (expression -> expression TIMES expression .)
    GT              reduce using rule 19 (expression -> expression TIMES expression .)
    EQ              reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    DONE            reduce using rule 19 (expression -> expression TIMES expression .)
    VAR             reduce using rule 19 (expression -> expression TIMES expression .)
    ID              reduce using rule 19 (expression -> expression TIMES expression .)
    FORWARD         reduce using rule 19 (expression -> expression TIMES expression .)
    IF              reduce using rule 19 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 19 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 19 (expression -> expression TIMES expression .)
    FINISH          reduce using rule 19 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 19 (expression -> expression TIMES expression .)
    DO              reduce using rule 19 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 70

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    LT              reduce using rule 20 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 20 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    DONE            reduce using rule 20 (expression -> expression DIVIDE expression .)
    VAR             reduce using rule 20 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 20 (expression -> expression DIVIDE expression .)
    FORWARD         reduce using rule 20 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 20 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 20 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    FINISH          reduce using rule 20 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 20 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]
  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 71

    (32) expression -> ID LPAREN expression . RPAREN
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 77
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 72

    (33) expression -> ID LBRACKET expression . RBRACKET
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RBRACKET        shift and go to state 78
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 73

    (30) statement -> WHILE condition DO statements . DONE
    (31) statement -> WHILE condition DO statements . FINISH statements DONE
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 79
    FINISH          shift and go to state 80
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 74

    (36) statement -> ID LBRACKET expression RBRACKET ASSIGN . expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    expression                     shift and go to state 81

state 75

    (14) statement -> VAR ID LPAREN NUMBER RPAREN .

    DONE            reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    VAR             reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    ID              reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    FORWARD         reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    IF              reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    WHILE           reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    RETURN          reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)
    FINISH          reduce using rule 14 (statement -> VAR ID LPAREN NUMBER RPAREN .)


state 76

    (23) statement -> IF condition DO statements DONE . if_else_chain
    (24) if_else_chain -> .
    (25) if_else_chain -> . ELUND condition DO statements DONE if_else_chain
    (26) if_else_chain -> . ELDEF DO statements DONE

    DONE            reduce using rule 24 (if_else_chain -> .)
    VAR             reduce using rule 24 (if_else_chain -> .)
    ID              reduce using rule 24 (if_else_chain -> .)
    FORWARD         reduce using rule 24 (if_else_chain -> .)
    IF              reduce using rule 24 (if_else_chain -> .)
    WHILE           reduce using rule 24 (if_else_chain -> .)
    RETURN          reduce using rule 24 (if_else_chain -> .)
    FINISH          reduce using rule 24 (if_else_chain -> .)
    ELUND           shift and go to state 83
    ELDEF           shift and go to state 84

    if_else_chain                  shift and go to state 82

state 77

    (32) expression -> ID LPAREN expression RPAREN .

    LT              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    GT              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    EQ              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    TIMES           reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    DONE            reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    VAR             reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    ID              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    FORWARD         reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    IF              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    WHILE           reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    RETURN          reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    FINISH          reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)
    DO              reduce using rule 32 (expression -> ID LPAREN expression RPAREN .)


state 78

    (33) expression -> ID LBRACKET expression RBRACKET .

    LT              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    GT              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    EQ              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    DONE            reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    VAR             reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    ID              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    FORWARD         reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    IF              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    FINISH          reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)
    DO              reduce using rule 33 (expression -> ID LBRACKET expression RBRACKET .)


state 79

    (30) statement -> WHILE condition DO statements DONE .

    DONE            reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    VAR             reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    ID              reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    FORWARD         reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    IF              reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    WHILE           reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    RETURN          reduce using rule 30 (statement -> WHILE condition DO statements DONE .)
    FINISH          reduce using rule 30 (statement -> WHILE condition DO statements DONE .)


state 80

    (31) statement -> WHILE condition DO statements FINISH . statements DONE
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 85
    statement                      shift and go to state 18

state 81

    (36) statement -> ID LBRACKET expression RBRACKET ASSIGN expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    DONE            reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    VAR             reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    ID              reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    FORWARD         reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    IF              reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    WHILE           reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    RETURN          reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    FINISH          reduce using rule 36 (statement -> ID LBRACKET expression RBRACKET ASSIGN expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 82

    (23) statement -> IF condition DO statements DONE if_else_chain .

    DONE            reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    VAR             reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    ID              reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    FORWARD         reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    IF              reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    WHILE           reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    RETURN          reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)
    FINISH          reduce using rule 23 (statement -> IF condition DO statements DONE if_else_chain .)


state 83

    (25) if_else_chain -> ELUND . condition DO statements DONE if_else_chain
    (27) condition -> . expression LT expression
    (28) condition -> . expression GT expression
    (29) condition -> . expression EQ expression
    (10) expression -> . INF
    (11) expression -> . NAN
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (32) expression -> . ID LPAREN expression RPAREN
    (33) expression -> . ID LBRACKET expression RBRACKET
    (34) expression -> . ID

    INF             shift and go to state 34
    NAN             shift and go to state 35
    MINUS           shift and go to state 36
    NUMBER          shift and go to state 37
    ID              shift and go to state 38

    condition                      shift and go to state 86
    expression                     shift and go to state 33

state 84

    (26) if_else_chain -> ELDEF . DO statements DONE

    DO              shift and go to state 87


state 85

    (31) statement -> WHILE condition DO statements FINISH statements . DONE
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 88
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 86

    (25) if_else_chain -> ELUND condition . DO statements DONE if_else_chain

    DO              shift and go to state 89


state 87

    (26) if_else_chain -> ELDEF DO . statements DONE
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 90
    statement                      shift and go to state 18

state 88

    (31) statement -> WHILE condition DO statements FINISH statements DONE .

    DONE            reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    VAR             reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    ID              reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    FORWARD         reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    IF              reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    WHILE           reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    RETURN          reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)
    FINISH          reduce using rule 31 (statement -> WHILE condition DO statements FINISH statements DONE .)


state 89

    (25) if_else_chain -> ELUND condition DO . statements DONE if_else_chain
    (6) statements -> . statements statement
    (7) statements -> . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statements                     shift and go to state 91
    statement                      shift and go to state 18

state 90

    (26) if_else_chain -> ELDEF DO statements . DONE
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 92
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 91

    (25) if_else_chain -> ELUND condition DO statements . DONE if_else_chain
    (6) statements -> statements . statement
    (8) statement -> . VAR ID ASSIGN NUMBER
    (9) statement -> . ID LPAREN expression RPAREN
    (12) statement -> . FORWARD NUMBER
    (13) statement -> . VAR ID
    (14) statement -> . VAR ID LPAREN NUMBER RPAREN
    (23) statement -> . IF condition DO statements DONE if_else_chain
    (30) statement -> . WHILE condition DO statements DONE
    (31) statement -> . WHILE condition DO statements FINISH statements DONE
    (35) statement -> . ID ASSIGN expression
    (36) statement -> . ID LBRACKET expression RBRACKET ASSIGN expression
    (37) statement -> . RETURN
    (38) statement -> . RETURN expression

    DONE            shift and go to state 93
    VAR             shift and go to state 19
    ID              shift and go to state 16
    FORWARD         shift and go to state 20
    IF              shift and go to state 21
    WHILE           shift and go to state 22
    RETURN          shift and go to state 23

    statement                      shift and go to state 29

state 92

    (26) if_else_chain -> ELDEF DO statements DONE .

    DONE            reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    VAR             reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    ID              reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    FORWARD         reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    IF              reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    WHILE           reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    RETURN          reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)
    FINISH          reduce using rule 26 (if_else_chain -> ELDEF DO statements DONE .)


state 93

    (25) if_else_chain -> ELUND condition DO statements DONE . if_else_chain
    (24) if_else_chain -> .
    (25) if_else_chain -> . ELUND condition DO statements DONE if_else_chain
    (26) if_else_chain -> . ELDEF DO statements DONE

    DONE            reduce using rule 24 (if_else_chain -> .)
    VAR             reduce using rule 24 (if_else_chain -> .)
    ID              reduce using rule 24 (if_else_chain -> .)
    FORWARD         reduce using rule 24 (if_else_chain -> .)
    IF              reduce using rule 24 (if_else_chain -> .)
    WHILE           reduce using rule 24 (if_else_chain -> .)
    RETURN          reduce using rule 24 (if_else_chain -> .)
    FINISH          reduce using rule 24 (if_else_chain -> .)
    ELUND           shift and go to state 83
    ELDEF           shift and go to state 84

    if_else_chain                  shift and go to state 94

state 94

    (25) if_else_chain -> ELUND condition DO statements DONE if_else_chain .

    DONE            reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    VAR             reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    ID              reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    FORWARD         reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    IF              reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    WHILE           reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    RETURN          reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)
    FINISH          reduce using rule 25 (if_else_chain -> ELUND condition DO statements DONE if_else_chain .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
